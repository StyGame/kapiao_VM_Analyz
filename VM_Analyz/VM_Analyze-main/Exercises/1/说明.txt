1. 编译 main.cpp, 使用 VMP 对 main 函数虚拟保护.
2. 建立模拟环境, 从 main 的入口, 模拟执行到 printf 的入口. 利用修改eip和栈, 对 scanf 和 strcmp 函数的行为手动模拟.
3. 考虑如何定位对 strcmp 函数的调用位置.
4. 通过修改 strcmp 的返回值实现爆破.
5. 打印出模拟过程中遇到的所有 call 指令, jcc 指令, ret 指令, jmp reg 指令, jmp [mem] 指令 的地址和反汇编.
6. 总结vmp的局部混淆特征, 对一个代码块中的局部混淆进行手工清理.
7. (选做)写出自动去混淆工具, 并针对一个具体的代码块验证有效性.